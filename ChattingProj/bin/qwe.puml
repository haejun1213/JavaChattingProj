@startuml

package "chat.client" {
    class ChatClient {
        - String chatName
        - Socket socket
        - DataInputStream dis
        - DataOutputStream dos
        - List<String> messageHistory

        + void connect(String serverIP, int portNo, String chatName)
        + void send(String message)
        + void receive(Scanner sc)
        + void quit()
        + void saveChatHistory()
        + void sendFile(String filePath)
        + void addMessageToHistory(String message)
        - void sendRaw(String message)
        - void saveImage(String imageId, byte[] imageData)
    }
}

package "chat.server" {
    class ChatServer {
        - String quitCommand
        - ServerSocket serverSocket
        - Map<String, ClientService> chatClientInfo
        - Map<String, byte[]> imageStore

        + void start(int portNo)
        + void connectClient()
        + void stop()
        + boolean addClient(ClientService clientService)
        + boolean isChatNameUnique(String chatName)
        + void updateClientName(ClientService clientService, String newName)
        + void addClientInfo(ClientService clientService)
        + void removeClientInfo(ClientService clientService)
        + void sendToAll(ClientService clientService, String message)
        + void sendPrivateMessage(ClientService clientService, String recipientName, String message)
        + void addImage(String imageId, byte[] imageData)
        + byte[] getImage(String imageId)
        + String getClientList()
    }

    class ClientService {
        - ChatServer chatServer
        - Socket socket
        - DataInputStream dis
        - DataOutputStream dos
        - String clientIP
        - String chatName

        + ClientService(ChatServer chatServer, Socket socket)
        + void receive()
        + void send(String message)
        + void quit()
        - void handleRename(String message)
        - void handlePrivateMessage(String message)
        - void handleImageReceive(String message)
        - void handleGetImage(String message)
    }
}

ChatServer "1" -- "*" ClientService : manages
ChatClient --> ChatServer : connects to
ClientService --> ChatServer : interacts with
ClientService --> ChatClient : receives messages

@enduml
